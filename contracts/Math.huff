/* Interface */
#define function max(uint256,uint256) pure returns (uint256)
#define function min(uint256,uint256) pure returns (uint256)
// #define function average(uint256[]) pure returns (uint256)
// #define function ceilDiv(uint256,uint256) pure returns (uint256)
// #define function sqrt(uint256) pure returns (uint256)

/* Methods */
#define macro MAX() = takes(0) returns (0) {
    0x04 calldataload       // [a]
    0x24 calldataload       // [b, a]
    dup2                    // [a, b, a]
    dup2                    // [b, a, b, a]
    gt                      // [b>a, b, a]
    b jumpi                 // [b, a]
    pop                     // [a]
    0x00 mstore             // [], {a}
    0x20 0x00 return        // [], {a}
    b:                      // [b, a], {}
        0x00 mstore         // [a], {b}
        0x20 0x00 return    // [a], {b}
}
#define macro MIN() = takes(0) returns (0) {
    0x04 calldataload       // [a]
    0x24 calldataload       // [b, a]
    dup2                    // [a, b, a]
    dup2                    // [b, a, b, a]
    lt                      // [b<a, b, a]
    b jumpi                 // [b, a]
    pop                     // [a]
    0x00 mstore             // [], {a}
    0x20 0x00 return        // [], {a}
    b:                      // [b, a], {}
        0x00 mstore         // [a], {b}
        0x20 0x00 return    // [a], {b}
}
#define macro AVERAGE() = takes(0) returns (0) {
    
}
// #define macro CEIL_DIV() = takes(0) returns (0) {
    
// }
// #define macro SQRT() = takes(0) returns (0) {
    
// }

#define macro MAIN() = takes(0) returns(0) {
    // Identify which function is being called
    0x00 calldataload 0xE0 shr // Load 32 bytes from 0x00 at calldata, shift right by 0xE0 bits (28 bytes)

    dup1 0x6d5433e6 eq max jumpi
    dup1 0x7ae2b5c7 eq min jumpi
    // dup1 0xa8606b82 eq AVERAGE() jumpi
    // dup1 0x9cb35327 eq CEIL_DIV() jumpi
    // dup1 0x677342ce eq SQRT() jumpi

    max:
        MAX()
    min:
        MIN()
}